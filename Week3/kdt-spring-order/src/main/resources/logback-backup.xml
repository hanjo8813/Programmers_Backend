<configuration>

    <conversionRule
            conversionWord="clr"
            converterClass="org.springframework.boot.logging.logback.ColorConverter"/>

<!--    프로퍼티를 생성해서 변수처럼 사용할 수 있다-->
<!--    시간 / 스레드 / (왼쪽부터5칸확보)레벨 / (최대36)로거명 / 로깅내용-->
    <property name="CONSOLE_LOG_PATTERN" value="%clr(%d{HH:mm:ss.SSS}){cyan} [%thread] %clr(%-5level) %logger{36} - %msg%n"/>
    <property name="FILE_LOG_PATTERN" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>

    <timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss"/>

<!--    콘솔출력 정의-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

<!--&lt;!&ndash;    파일저장 정의&ndash;&gt;-->
<!--    <appender name="FILE" class="ch.qos.logback.core.FileAppender">-->
<!--        <file>logs/kdt_${bySecond}.log</file>-->
<!--&lt;!&ndash;        <append>false</append>&ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    cron을 활용한 로그 나누기 설정 -->
    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

<!--        파일명을 설정해놓는다면? -->
<!--        가장 최신버전 로그파일명은 'access'로 유지되고, 날짜가 바뀌어 저장될때 -> 파일명이 바뀌어 저장되는 것-->
        <file>logs/access.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/access-%d{yyyy-MM-dd}.log</fileNamePattern>
        </rollingPolicy>

        <append>false</append>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>


    <logger name="org.prgrms.kdt" level="debug">
        <appender-ref ref="ROLLING_FILE" />
    </logger>

    <root level="warn">
        <appender-ref ref="STDOUT" />
    </root>

</configuration>